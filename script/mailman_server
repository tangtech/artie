#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require "mailman"

require File.dirname(__FILE__) + "/../config/environment"
Mailman.config.ignore_stdin = true

Mailman.config.pop3 = {
    server: 'pop.gmail.com', port: 995, ssl: true,
    username: GMAIL_USERNAME,
    password: GMAIL_PASSWORD
}

Mailman::Application.run do
  default do
    begin
      the_message_html = (message.multipart? ? message.html_part.body.decoded.force_encoding("ISO-8859-1").encode("UTF-8")  : message.body.decoded.force_encoding("ISO-8859-1").encode("UTF-8"))
      the_message_text = (message.multipart? ? message.text_part.body.decoded.force_encoding("ISO-8859-1").encode("UTF-8")  : message.body.decoded.force_encoding("ISO-8859-1").encode("UTF-8"))
      @incoming_rfq = IncomingRfq.create(:from => message.from.first, :subject => message.subject, :html_body => the_message_html, :text_body => the_message_text)

      if message.multipart?
        message.attachments.each do |attachment|
          file = StringIO.new(attachment.decoded)
          file.class.class_eval { attr_accessor :original_filename, :content_type }
          file.original_filename = attachment.filename
          file.content_type = attachment.mime_type
          if file.content_type == "text/plain" || file.content_type == "application/pdf"
            incoming_rfq_attachment = IncomingRfqAttachment.new
            incoming_rfq_attachment.attached_file = file
            incoming_rfq_attachment.incoming_rfq_id = @incoming_rfq.id
            incoming_rfq_attachment.save
          end
        end
      end

    rescue Exception => e
      Mailman.logger.error "Exception occurred while receiving message:\n#{message}"
      Mailman.logger.error [e, *e.backtrace].join("\n")
    end
  end
end
